<!-- 
$DragonFly: doc/en/books/usersguide/backups/chapter.sgml,v 1.2 2004/06/01 20:01:21 justin Exp $
-->
<chapter id="backups">
  <chapterinfo>
    <authorgroup>
      <author>
        <firstname>Justin</firstname>
        <surname>Sherrill</surname>
        <contrib>Contributed by </contrib>
      </author> <!-- justin@dragonflybsd.org  29 May 2004 -->
    </authorgroup>
  </chapterinfo>
  <title>Backups</title>

  <sect1 id="backups-synopsis">
    <title>Backups Overview</title>
      <para>If you are looking to save a relatively small number of files, 
      you can use 
        <citerefentry>
          <refentrytitle>tar</refentrytitle>
          <manvolnum>1</manvolnum>
        </citerefentry> to concatenate multiple files into a single archive.  
      Optionally, then use a utility like 
        <citerefentry>
          <refentrytitle>gzip</refentrytitle>
          <manvolnum>1</manvolnum>
        </citerefentry> to save on disk space or bandwidth used.  
      Save the resulting file somewhere other than on the disk that contains the 
      original files.</para>

      <para><citerefentry>
          <refentrytitle>cpdup</refentrytitle>
          <manvolnum>1</manvolnum>
        </citerefentry> can be used to backup/mirror an entire directory 
	structure to a different disk.</para>
      
      <para>Special files, whole filesystems, and incremental 
      backups all require more specialized tools.  For this, the tools 
        <citerefentry>
          <refentrytitle>dump</refentrytitle>
          <manvolnum>8</manvolnum>
        </citerefentry> and 
        <citerefentry>
          <refentrytitle>restore</refentrytitle>
          <manvolnum>8</manvolnum>
        </citerefentry>
      will handle almost any eventuality.  <command>dump()</command> will copy a 
      complete filesystem to the location specified; <command>restore()</command> 
      will replace that filesystem into a clean partition.  It is possible 
      to completely reformat a hard drive that has been backed up with 
      <command>dump()</command>, and then use <command>restore()</command> to 
      bring that drive back completely to its original state.</para>
      
      <para><command>dump()</command> can dump a mounted disk to a single file:</para>
  
      <screen> 
      &prompt.root; <userinput>dump 0af <replaceable>filename</replaceable> <replaceable>mountpoint</replaceable></userinput>
      </screen>
      
      <para><command>restore()</command> can then recreate that data from the dumpfile:</para>
      
      <screen> 
      &prompt.root; <userinput>restore rf <replaceable>filename</replaceable></userinput>
      </screen>
      
      <note>
        <para>When using the -r option, <command>restore()</command> rebuilds the filesystem 
        described by the dumpfile.  Only restore files using -r in an empty directory or 
        clean mountpoint.  Otherwise, any existing data could be overwritten.</para>
      </note>     
  
      <para>The dumped data can be automatically placed in a compressed file, and restored 
      while decompressing.</para>

      <screen> 
      &prompt.root; <userinput>dump 0af - / | gzip > root.dump.gz</userinput>
      &prompt.root; <userinput>gunzip root.dump.gz | restore rf -</userinput>
      </screen>

      <para>It's also possible to selectively restore files from a dump:</para>
  
      <screen> 
      &prompt.root; <userinput>restore xf <replaceable>filename</replaceable> <replaceable>files_to_restore</replaceable></userinput>
      </screen>
    
  </sect1>

  <sect1 id="backups-media">
    <title>Backup Media</title>
      <para>The "classical" method of data storage has always been tape drives.  
      A number of SCSI and IDE tape drives are supported under DragonFly; no 
      compatibility list exists at this point, though devices supported on 
      FreeBSD-4 should work.  Tape backup has several advantages: it is stable, 
      relatively cheap, and can hold a large quantity of data.  However, tape 
      media is accessed in linear fashion, and so it can may take some time to 
      retrieve data.</para>
      
      <para>Tape speed can be improved by using larger block sizes.  The 
      'b' option controls block size while using <command>dump()</command> or 
      <command>restore</command>.</para>
      
      <screen>
      &prompt.root; <userinput>dump 0abf 64 /dev/<replaceable>tapedevice</replaceable> /</userinput>
      &prompt.root; <userinput>restore rbf 64 /dev/<replaceable>tapedevice</replaceable></userinput>
      </screen>
      
      <para><command>dd</command> can be used to reshape data passing to and from a 
      tape drive.</para>
      
      <screen> 
      &prompt.root; <userinput>tar czf - / | dd obs=64k of=/dev/<replaceable>tapedevice</replaceable></userinput>
      &prompt.root; <userinput>dd ibs=64k | tar xvzpf -</userinput>
      </screen>

      <para>More recently, recordable optical media have become a viable option for 
      backup media.  The shelf life and price per megabyte of saved data is not 
      as great as tape (as of this writing), but the recording equipment is 
      relatively common for creating CDs, and becoming more so for DVDs.<!--  Check 
      the "Recording media" section (FIXME: insert link to desktop/recording media) 
      for more information on burning CDs and DVDs.--></para>

      <para>A third media option is hard drives.  While these are not as cheap as tape or 
      blank optical media, they offer the ability, when mounted, to instantly 
      access data, or to update existing records.</para>

      <para>Whichever option is picked, the backup media, once filled, should be stored 
      in a location physically separated from the source data.  Time invested in 
      backups is wasted if the backups can be lost in the same accident that 
      destroys the original data.</para>
  </sect1>
  
  <sect1 id="backups-automating">
    <title>Automating backups</title> 
      <para>If you are performing relatively simple backups to a network location, it's 
      easy enough to use 
        <citerefentry>
          <refentrytitle>cron</refentrytitle>
          <manvolnum>8</manvolnum>
        </citerefentry> to schedule regular backup events.  For more 
      complex situtations, there are ports available such as 
      <filename role="package">misc/amanda</filename> or 
      <filename role="package">sysutils/bacula</filename>.</para>
  </sect1>

</chapter>
