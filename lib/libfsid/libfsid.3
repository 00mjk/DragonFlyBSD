.\" Copyright (c) 2010 The DragonFly Project.  All rights reserved.
.\" 
.\" This code is derived from software contributed to The DragonFly Project
.\" by Ákos Kovács <akoskovacs@gmx.com>
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\" 3. Neither the name of The DragonFly Project nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific, prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\" FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
.\" COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
.\" OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd December 12, 2010
.Dt LIBFSID 3
.Os
.Sh NAME
.Nm fsid_probe ,
.Nm fsid_probe_all ,
.Nm fsid_volname ,
.Nm fsid_volname_all ,
.Nm fsid_fsname
.Nm fsid_fs_count
.Nd general libfsid functions
.Sh LIBRARY
A simple interface for filesystem recognising.
Programs should be linked with
.Fl lfsid .
.Sh SYNOPSIS
.In libfsid.h
.Ft int
.Fn fsid_probe "const char *dev" "const char *fs_type"
.Ft int
.Fn fsid_probe_all "const char *dev"
.Ft char *
.Fn fsid_volname "const char *dev" "const char *fs_type"
.Ft char *
.Fn fsid_volname_all "const char *dev"
.Ft char *
.Fn fsid_fsname "int id"
.Ft int
.Fn fsid_fs_count "void"
.Sh DESCRIPTION
.Pp
.\" General description
The 
.Lb libfsid
provides an interface to determine several filesystems
and to get their volume labels.
.Pp
Big part of the functions use the first parameter
.Fa dev
as the full path of the device, some of them has additionally an
.Fa fs_type
parameter wich is the name of the choosen filesystem. It can be:
.Pp
.Bd -literal -offset indent -compact
HAMMER		HAMMER
UFS		UFS
CD9660		ISO 9660
EXT2		Extended 2
MSDOSFS		FAT32, FAT16
.Ed
.Pp
.Pp
.\" fsid_probe function
The
.Fn fsid_probe
returns 1 if the device has the filesystem type as expected by the
.Fa fs_type
parameter, otherwise 0.
.Pp
.\" fsid_probe_all function
.Fn fsid_probe_all
function try to identify the filesystem type, it returns 0 if the filesystem unknown, or the check fails. Otherwise the returned value is one of this macros:
.Pp
.Bd -literal -offset indent -compact
FSID_HAMMER	HAMMER
FSID_UFS	UFS
FSID_CD9660	ISO 9660
FSID_EXT2	Extended 2
FSID_MSDOSFS	FAT32, FAT16
.Ed
.Pp
The name of the filesystem can easily queried with the
.Fn fsid_fsname .
.Pp
.Fn fsid_volname
function returns with the volume label, if the filesystem is the same as the
.Fa fs_type ,
if not just returns with 
.Dv NULL .
.Pp
.Fn fsid_volname_all
give back the volume label, if the filesystem known otherwise returns with
.Dv NULL .
.Pp
.Fn fsid_fsname
give back the name of the filesystem as a pointer to string. The
.Fa id
is mostly the return value of the
.Fn fsid_probe_all .
.Pp
.Fn fsid_fs_count
return with a number of supported filesystems.
.Sh AUTHOR
The library and the manual page wrote by Ákos Kovács <akoskovacs@gmx.com>.
.Sh SEE ALSO
.Xr devattr 3 
