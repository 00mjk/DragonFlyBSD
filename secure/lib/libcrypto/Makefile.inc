# $FreeBSD: src/secure/lib/libcrypto/Makefile.inc,v 1.7.2.11 2003/02/20 15:07:32 nectar Exp $
# $DragonFly: src/secure/lib/libcrypto/Makefile.inc,v 1.7 2004/12/18 20:53:19 asmodai Exp $

OSSLVERSION=	0.9.7e
LCRYPTO_SRC=	${.CURDIR}/../../../crypto/openssl-${OSSLVERSION}
LCRYPTO_DOC=	${.CURDIR}/../../../crypto/openssl-${OSSLVERSION}/doc

CFLAGS+=	-DTERMIOS -DANSI_SOURCE
CFLAGS+=	-I${LCRYPTO_SRC} -I${LCRYPTO_SRC}/crypto \
		-I${LCRYPTO_SRC}/crypto/engine -I${.OBJDIR}

.if !defined(MAKE_IDEA) || ${MAKE_IDEA} != YES
CFLAGS+=	-DOPENSSL_NO_IDEA
.else
_idea_h=	idea/idea.h
.endif

.if ${MACHINE_ARCH} == "i386"
CFLAGS+= -DL_ENDIAN
.elif ${MACHINE_ARCH} == "alpha"
# no ENDIAN stuff defined for alpha (64-bit)
.endif

HDRS+=	\
	../e_os.h ../e_os2.h \
	crypto.h \
	ebcdic.h \
	opensslv.h \
	ossl_typ.h \
	symhacks.h \
	tmdiff.h \
	aes/aes.h aes/aes_locl.h \
	asn1/asn1.h asn1/asn1_mac.h asn1/asn1t.h \
	bio/bio.h \
	bf/blowfish.h \
	bn/bn.h \
	buffer/buffer.h \
	cast/cast.h \
	comp/comp.h \
	conf/conf.h conf/conf_api.h \
	des/des.h des/des_old.h \
	dh/dh.h \
	dsa/dsa.h \
	dso/dso.h \
	ec/ec.h \
	engine/eng_int.h engine/engine.h engine/hw_4758_cca_err.h \
	engine/hw_aep_err.h engine/hw_atalla_err.h engine/hw_cswift_err.h \
	engine/hw_ncipher_err.h engine/hw_nuron_err.h engine/hw_sureware_err.h \
	engine/hw_ubsec_err.h \
	err/err.h \
	../fips/fips.h ../fips/rand/fips_rand.h \
	hmac/hmac.h \
	${_idea_h} \
	krb5/krb5_asn.h \
	lhash/lhash.h \
	md2/md2.h \
	md4/md4.h \
	md5/md5.h \
	mdc2/mdc2.h \
	ocsp/ocsp.h \
	objects/objects.h objects/obj_mac.h \
	pem/pem.h pem/pem2.h \
	pkcs12/pkcs12.h pkcs7/pkcs7.h \
	rand/rand.h \
	rc2/rc2.h rc4/rc4.h rc5/rc5.h \
	ripemd/ripemd.h \
	rsa/rsa.h \
	stack/stack.h stack/safestack.h \
	sha/sha.h \
	txt_db/txt_db.h \
	ui/ui.h ui/ui_compat.h ui/ui_locl.h \
	x509/x509.h x509/x509_vfy.h x509v3/x509v3.h

SRCS+=		buildinf.h openssl/opensslconf.h openssl/evp.h
CLEANFILES+=	buildinf.h openssl/opensslconf.h openssl/evp.h
CLEANDIRS+=	openssl

buildinf.h:
	( echo "#ifndef MK1MF_BUILD"; \
	echo "  /* auto-generated by crypto/Makefile.ssl for crypto/cversion.c */"; \
	echo "  #define CFLAGS \"$(CC)\""; \
	echo "  #define PLATFORM \"`uname -s`-`uname -m`\""; \
	echo "  #define DATE \"`LC_ALL=C date`\""; \
	echo "#endif" ) > ${.TARGET}

openssl/opensslconf.h: openssl/.dummy ../../lib/libcrypto/opensslconf-${MACHINE_ARCH}.h
	cp ${.ALLSRC:Nopenssl/.dummy} ${.TARGET}

openssl/evp.h: openssl/.dummy ${LCRYPTO_SRC}/crypto/evp/evp.h
.if !defined(MAKE_IDEA) || ${MAKE_IDEA} != YES
	sed '/^#ifndef OPENSSL_NO_IDEA$$/,/^#endif$$/d' ${.ALLSRC:Nopenssl/.dummy} > ${.TARGET}
.else
	${INSTALL} -C -m 444 ${.ALLSRC:Nopenssl/.dummy} ${.TARGET}
.endif

SRCS+=	${HDRS:T:S;^;openssl/;}
.for h in ${HDRS:S/^/${LCRYPTO_SRC}\/crypto\//}
openssl/${h:T}: openssl/.dummy ${h}
	${INSTALL} -C -m 444 ${h} openssl
.endfor

# mkdir the required directory as its own target, so multiple
# mkdir commands do not race against each other.
#
openssl/.dummy:
	mkdir -p openssl
	if [ ! -f ${.TARGET} ]; then touch ${.TARGET}; fi

MANDIR=	${SHAREDIR}/openssl/man/man

.if defined(LIB)
_docs=	${LIB}
_skip=	des_modes
_sec=	3
.else
_docs=	apps
_skip=	config
_sec=	1
.endif

man-update:
.for manpage in ${MAN}
	@(sec=${manpage:E}; \
	pod=${manpage:R}.pod; \
	cp ${LCRYPTO_DOC}/${_docs}/$$pod .; \
	pod2man --section=$$sec --release="${OSSLVERSION}" --center="OpenSSL" \
	  $$pod > ${.CURDIR}/man/${manpage}; \
	rm $$pod; \
	${ECHO} ${manpage})
.endfor

man-makefile-update:
	rm -f ${.CURDIR}/Makefile.man
	echo '# $$DragonFly: src/secure/lib/libcrypto/Makefile.inc,v 1.7 2004/12/18 20:53:19 asmodai Exp $$' >> ${.CURDIR}/Makefile.man
	echo '# DO NOT EDIT: generated from man-makefile-update target' >> \
	    ${.CURDIR}/Makefile.man
	for i in ${LCRYPTO_DOC}/${_docs}/*.pod; do \
		fn=`basename $$i .pod`; \
		if [ "$$fn" != "${_skip}" ]; then \
		${ECHO} "MAN+= $$fn.${_sec}" >> ${.CURDIR}/Makefile.man; \
		fi; \
	done
	for i in ${LCRYPTO_DOC}/${_docs}/*.pod; do \
		fn=`basename $$i .pod`; \
		if [ "$$fn" != "${_skip}" ]; then \
		perl ${LCRYPTO_SRC}/util/extract-names.pl < $$i | \
		  awk "/^$$fn\$$/ { next; } \
		  { print \"MLINKS+= $$fn.${_sec} \" \$$1 \".${_sec}\" }" >> \
		  ${.CURDIR}/Makefile.man; \
		fi; \
	done
