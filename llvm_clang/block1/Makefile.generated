# Commonly used generation targets

llvm/Support/DataTypes.h: ${TOP_LLVM}/include/llvm/Support/DataTypes.h.cmake
	mkdir -p ${.TARGET:H}
	sed -e 's|#cmakedefine|#define|' \
		-e 's|$${HAVE_INTTYPES_H}|1|' \
		-e 's|$${HAVE_STDINT_H}|1|' \
		-e 's|$${HAVE_UINT64_T}|1|' \
		-e 's|$${HAVE_U_INT64_T}|1|' ${.ALLSRC} > ${.TARGET}

.for X in config.h llvm-config.h
llvm/Config/${X}: ${.CURDIR}/../../block1/configuration/${X}
	mkdir -p ${.TARGET:H}
	cp ${.ALLSRC} ${.TARGET}
.endfor

DEFS=	Targets/LLVM_TARGET \
	AsmPrinters/LLVM_ASM_PRINTER \
	Disassemblers/LLVM_DISASSEMBLER \
	AsmParsers/LLVM_ASM_PARSER

.for D in ${DEFS}
llvm/Config/${D:H}.def:
	mkdir -p ${.TARGET:H}
	@echo "#ifndef ${D:T}" > ${.TARGET}
	@echo "#  error Please define the macro ${D:T}(TargetName)" >> ${.TARGET}
	@echo "#endif" >> ${.TARGET}
	@echo >> ${.TARGET}
	@echo "${D:T}(X86)" >> ${.TARGET}
.if "${D:H}" == "Targets"
	@echo "${D:T}(CppBackend)" >> ${.TARGET}
.endif
.if defined(CLANG_EXTRA_TARGETS)
.   if ${CLANG_EXTRA_TARGETS:MAArch64}
	@echo "${D:T}(AArch64)" >> ${.TARGET}
.   endif
.   if ${CLANG_EXTRA_TARGETS:MAMDGPU}
.      if "${D:H}" != "Disassemblers"
	@echo "${D:T}(AMDGPU)" >> ${.TARGET}
.      endif
.   endif
.   if ${CLANG_EXTRA_TARGETS:MARM}
	@echo "${D:T}(ARM)" >> ${.TARGET}
.   endif
.   if ${CLANG_EXTRA_TARGETS:MMips}
	@echo "${D:T}(Mips)" >> ${.TARGET}
.   endif
.   if ${CLANG_EXTRA_TARGETS:MPowerPC}
	@echo "${D:T}(PowerPC)" >> ${.TARGET}
.   endif
.endif
	@echo >> ${.TARGET}
	@echo "#undef ${D:T}" >> ${.TARGET}
	@echo "${D:H}.def created."
.endfor
