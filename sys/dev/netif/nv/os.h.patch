$DragonFly: src/sys/dev/netif/nv/Attic/os.h.patch,v 1.2 2005/04/04 18:45:07 joerg Exp $

--- os.h.orig	2005-03-12 10:59:28.000000000 +0100
+++ os.h	2005-04-02 20:33:43.000000000 +0200
@@ -28,9 +28,9 @@
 
 #define HDO_VERSION_STRING "HDR O: $Revision: #21 $";
 
-// This is the maximum packet size that we will be sending
-// #define MAX_PACKET_SIZE     2048
-//#define RX_BUFFER_SIZE      2048
+/* This is the maximum packet size that we will be sending */
+/* #define MAX_PACKET_SIZE     2048 */
+/*#define RX_BUFFER_SIZE      2048 */
 
 #define MIN_PACKET_MTU_SIZE     576
 #define MAX_PACKET_MTU_SIZE     9202
@@ -56,7 +56,7 @@
     NV_UINT32    uiLength;
     /* Parameter to OS layer to indicate what type of memory is needed */
     NV_UINT16    AllocFlags;
-    NV_UINT16    AlignmentSize; //always power of 2
+    NV_UINT16    AlignmentSize; /*always power of 2 */
     /* Following three fields used for aligned memory allocation */
     PNV_VOID   pLogicalOrig;
     NV_UINT32    pPhysicalOrigLow;
@@ -65,7 +65,7 @@
 }   MEMORY_BLOCKEX, *PMEMORY_BLOCKEX;
 
 
-// The typedefs for the OS functions
+/* The typedefs for the OS functions */
 typedef NV_API_CALL NV_SINT32 (* PFN_MEMORY_ALLOC) (PNV_VOID pOSCX, PMEMORY_BLOCK pMem);
 typedef NV_API_CALL NV_SINT32 (* PFN_MEMORY_FREE)  (PNV_VOID pOSCX, PMEMORY_BLOCK pMem);
 typedef NV_API_CALL NV_SINT32 (* PFN_MEMORY_ALLOCEX) (PNV_VOID pOSCX, PMEMORY_BLOCKEX pMem);
@@ -92,14 +92,14 @@
 typedef NV_API_CALL NV_SINT32 (* PFN_LOCK_RELEASE) (PNV_VOID pOSCX, NV_SINT32 iLockType, PNV_VOID pvLock);
 typedef NV_API_CALL PNV_VOID (* PFN_RETURN_BUFFER_VIRTUAL) (PNV_VOID pvContext, PNV_VOID pvADReadData);
 
-// Here are the OS functions that those objects below the OS interface
-// can call up to.
+/* Here are the OS functions that those objects below the OS interface
+** can call up to. */
 typedef struct  _OS_API
 {
-    // OS Context -- this is a parameter to every OS API call
+    /* OS Context -- this is a parameter to every OS API call */
     PNV_VOID                       pOSCX;
 
-    // Basic OS functions
+    /* Basic OS functions */
     PFN_MEMORY_ALLOC            pfnAllocMemory;
     PFN_MEMORY_FREE             pfnFreeMemory;
     PFN_MEMORY_ALLOCEX          pfnAllocMemoryEx;
@@ -125,4 +125,4 @@
     PFN_RETURN_BUFFER_VIRTUAL    pfnReturnBufferVirtual;
 }   OS_API, *POS_API;
 
-#endif // _OS_H_
+#endif /* _OS_H_ */
