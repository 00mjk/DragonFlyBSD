.\" Copyright (c) 2007 The DragonFly Project.  All rights reserved.
.\"
.\" This code is derived from software contributed to The DragonFly Project
.\" by Matthew Dillon <dillon@backplane.com>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\" 3. Neither the name of The DragonFly Project nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific, prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\" FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
.\" COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
.\" OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $DragonFly: src/sbin/hammer/hammer.8,v 1.58 2008/11/13 02:04:27 dillon Exp $
.\"
.Dd November 5, 2009
.Dt HAMMER 8
.Os
.Sh NAME
.Nm hammer
.Nd HAMMER file system utility
.Sh SYNOPSIS
.Nm
.Fl h
.Nm
.Op Fl 2Bqrvy
.Op Fl b Ar bandwidth
.Op Fl C Ar cachesize Ns Op Ns Cm \&: Ns Ar readahead
.Op Fl c Ar cyclefile
.Op Fl f Ar blkdev Ns Oo Ns Cm \&: Ns Ar blkdev Oc Ns *
.\" .Op Fl s Ar linkpath
.Op Fl i Ar delay
.Op Fl t Ar seconds
.Ar command
.Op Ar argument ...
.Sh DESCRIPTION
This manual page documents the
.Nm
utility which provides miscellaneous functions related to managing a
.Nm HAMMER
file system.
For a general introduction to the
.Nm HAMMER
file system, its features, and
examples on how to set up and maintain one, see
.Xr HAMMER 5 .
.Pp
The options are as follows:
.Bl -tag -width indent
.It Fl h
Get help.
.It Fl 2
Tell the mirror commands to use a 2-way protocol, which allows
automatic negotiation of transaction id ranges.
This option is automatically enabled by the
.Cm mirror-copy
command.
.It Fl B
Bulk Transfer.
.Cm Mirror-stream
will not attempt to break-up large initial bulk transfers into smaller pieces.
This can save time but if the link is lost in the middle of the
initial bulk transfer you will have to start over from scratch.
.It Fl b Ar bandwidth
Specify a bandwidth limit in bytes per second for mirroring streams.
This option is typically used to prevent batch mirroring operations from
loading down the machine.
The bandwidth may be suffixed with
.Cm k , m ,
or
.Cm g
to specify values in kilobytes, megabytes, and gigabytes per second.
If no suffix is specified, bytes per second is assumed.
.It Fl C Ar cachesize Ns Op Ns Cm \&: Ns Ar readahead
Set the memory cache size for any raw
.Tn I/O .
The default is 16m.
A suffix of
.Cm k
for kilobytes and
.Cm m
for megabytes is allowed,
else the cache size is specified in bytes.
.Pp
The read-behind/read-ahead defaults to 4
.Nm HAMMER
blocks.
.Pp
This option is typically only used with diagnostic commands
as kernel-supported commands will use the kernel's buffer cache.
.It Fl c Ar cyclefile
When pruning and reblocking you can instruction
.Nm
to start at the object id stored in the specified file.
If the file does not exist
.Nm
will start at the beginning.
If
.Nm
is told to run for a
specific period of time and is unable to complete the operation it will
write out the current object id so the next run can pick up where it left off.
If
.Nm
runs to completion it will delete
.Ar cyclefile .
.It Fl f Ar blkdev Ns Oo Ns Cm \&: Ns Ar blkdev Oc Ns *
Specify the volumes making up a
.Nm HAMMER
file system.
.It Fl i Ar delay
When maintaining a streaming mirroring this option specifies the
minimum delay after a batch ends before the next batch is allowed
to start.
The default is five seconds.
.It Fl q
Decrease verboseness.
May be specified multiple times.
.It Fl r
Specify recursion for those commands which support it.
.It Fl t Ar seconds
When pruning and reblocking you can tell the utility to stop after a
certain period of time.
This option is used along with the
.Fl c Ar cyclefile
option to prune or reblock a portion of the file system incrementally.
.It Fl v
Increase verboseness.
May be specified multiple times.
.It Fl y
Force "yes" for any interactive question.
.El
.Pp
The commands are as follows:
.Bl -tag -width indent
.\" ==== synctid ====
.It Cm synctid Ar filesystem Op Cm quick
Generates a guaranteed, formal 64 bit transaction id representing the
current state of the specified
.Nm HAMMER
file system.
The file system will be synced to the media.
.Pp
If the
.Cm quick
keyword is specified the file system will be soft-synced, meaning that a
crash might still undo the state of the file system as of the transaction
id returned but any new modifications will occur after the returned
transaction id as expected.
.Pp
This operation does not create a snapshot.
It is meant to be used
to track temporary fine-grained changes to a subset of files and
will only remain valid for
.Ql @@
snapshot access purposes for the
.Cm prune-min
period configured for the PFS.
If you desire a real snapshot then the
.Cm snapq
directive may be what you are looking for.
.\" ==== bstats ====
.It Cm bstats Op Ar interval
Output
.Nm HAMMER
B-tree statistics until interrupted.
Pause
.Ar interval
seconds between each display.
The default interval is one second.
.\" ==== iostats ====
.It Cm iostats Op Ar interval
Output
.Nm HAMMER
.Tn I/O
statistics until interrupted.
Pause
.Ar interval
seconds between each display.
The default interval is one second.
.\" ==== history ====
.It Cm history Ar path ...
Show the modification history for
.Nm HAMMER
file's inode and data.
.\" ==== blockmap ====
.It Cm blockmap
Dump the blockmap for the file system.
The
.Nm HAMMER
blockmap is two-layer
blockmap representing the maximum possible file system size of 1 Exabyte.
Needless to say the second layer is only present for blocks which exist.
.Nm HAMMER Ns 's
blockmap represents 8-Megabyte blocks, called big-blocks.
Each big-block has an append
point, a free byte count, and a typed zone id which allows content to be
reverse engineered to some degree.
.Pp
In
.Nm HAMMER
allocations essentially appended to a selected big-block using
the append offset and deducted from the free byte count.
When space is freed the free byte count is adjusted but
.Nm HAMMER
does not track holes in big-blocks for reallocation.
A big-block must be completely freed, either
through normal file system operations or through reblocking, before
it can be reused.
.Pp
Data blocks can be shared by deducting the space used from the free byte
count for each shared references, though
.Nm HAMMER
does not yet make use of this feature.
This means the free byte count can legally go negative.
.Pp
This command needs the
.Fl f
flag.
.\" ==== show ====
.It Cm show Op Ar lo Ns Cm \&: Ns Ar objid
Dump the B-tree.
By default this command will validate all B-Tree
linkages and CRCs, including data CRCs, and will report the most verbose
information it can dig up.
Any errors will show up with a
.Ql B
in column 1 along with various
other error flags.
.Pp
If you specify a localization and object id field the dump will
search for the key printing nodes as it recurses down, and then
will iterate forwards.
.Pp
If you use
.Fl q
the command will report less information about the inode contents.
.Pp
If you use
.Fl qq
the command will not report the content of the inode or other typed
data at all.
.Pp
If you use
.Fl qqq
the command will not report volume header information, big-block fill
ratios, mirror transaction ids, or report or check data CRCs.
B-tree CRCs and linkages are still checked.
.Pp
This command needs the
.Fl f
flag.
.\" .It Ar blockmap
.\" Dump the B-tree, record, large-data, and small-data blockmaps, showing
.\" physical block assignments and free space percentages.
.\" ==== namekey1 ====
.It Cm namekey1 Ar filename
Generate a
.Nm HAMMER
64 bit directory hash for the specified file name, using
the original directory hash algorithm in version 1 of the file system.
The low 32 bits are used as an iterator for hash collisions and will be
output as 0.
.\" ==== namekey2 ====
.It Cm namekey2 Ar filename
Generate a
.Nm HAMMER
64 bit directory hash for the specified file name, using
the new directory hash algorithm in version 2 of the file system.
The low 32 bits are still used as an iterator but will start out containing
part of the hash key.
.\" ==== namekey32 ====
.It Cm namekey32 Ar filename
Generate the top 32 bits of a
.Nm HAMMER
64 bit directory hash for the specified file name.
.\" ==== info ====
.It Cm info
Shows extended information about all the mounted
.Nm HAMMER
file systems.
At the moment volume identification, big-blocks information, space and
and pseudo-filesystem (PFS) details are shown.
.\" ==== cleanup ====
.It Cm cleanup Op Ar filesystem ...
This is a meta-command which executes snapshot, prune, rebalance and reblock
commands on the specified
.Nm HAMMER
file systems.
If no
.Ar filesystem
is specified this command will clean-up all
.Nm HAMMER
file systems in use, including PFS's.
To do this it will scan all
.Nm HAMMER
and
.Nm null
mounts, extract PFS id's, and clean-up each PFS found.
.Pp
This command will access a snapshots
directory and a configuration file for each
.Ar filesystem ,
creating them if necessary.
.Bl -tag -width indent
.It Nm HAMMER No version 2-
The configuration file is
.Pa config
in the snapshots directory which defaults to
.Pa <pfs>/snapshots .
.It Nm HAMMER No version 3+
The configuration file is saved in filesystem meta-data.
The snapshots directory defaults to
.Pa /var/hammer/<pfs>
.Pa ( /var/hammer/root
for root mount).
.El
.Pp
The format of the configuration file is:
.Bd -literal -offset indent
snapshots  <period> <retention-time> [any]
prune      <period> <max-runtime>
rebalance  <period> <max-runtime>
reblock    <period> <max-runtime>
recopy     <period> <max-runtime>
.Ed
.Pp
Defaults are:
.Bd -literal -offset indent
snapshots  1d 60d  # 0d 0d  for PFS /tmp, /var/tmp, /usr/obj
prune      1d 5m
rebalance  1d 5m
reblock    1d 5m
recopy     30d 10m
.Ed
.Pp
Time is given with a suffix of
.Cm d ,
.Cm h ,
.Cm m
or
.Cm s
meaning day, hour, minute and second.
.Pp
If the
.Cm snapshots
directive has a period of 0 and a retention time of 0
then snapshot generation is disabled, removal of old snapshots are
disabled, and prunes will use
.Cm prune-everything .
If the
.Cm snapshots
directive has a period of 0 but a non-zero retention time
then this command will not create any new snapshots but will remove old
snapshots it finds based on the retention time.
.Pp
By default only snapshots in the form
.Ql snap- Ns Ar yyyymmdd Ns Op - Ns Ar HHMM
are processed.
If the
.Cm any
directive is specified as a third argument on the
.Cm snapshots
config line then any softlink of the form
.Ql *- Ns Ar yyyymmdd Ns Op - Ns Ar HHMM
or
.Ql *. Ns Ar yyyymmdd Ns Op - Ns Ar HHMM
will be processed.
.Pp
A prune max-runtime of 0 means unlimited.
.Pp
If period hasn't passed since the previous
.Cm cleanup
run nothing is done.
For example a day has passed when midnight is passed (localtime).
By default,
.Dx
is set up to run
.Nm Ar cleanup
nightly via
.Xr periodic 8 .
.Pp
The default configuration file will create a daily snapshot, do a daily
pruning, rebalancing and reblocking run and a monthly recopy run.
Reblocking is defragmentation with a level of 95%,
and recopy is full defragmentation.
.Pp
By default prune and rebalance operations are time limited to 5 minutes,
reblock operations to a bit over 5 minutes,
and recopy operations to a bit over 10 minutes.
Reblocking and recopy runs are each broken down into four separate functions:
btree, inodes, dirs and data.
Each function is time limited to the time given in the configuration file,
but the btree, inodes and dirs functions usually does not take very long time,
full defragmentation is always used for these three functions.
Also note that this directive will by default disable snapshots on
the following PFS's:
.Pa /tmp ,
.Pa /var/tmp
and
.Pa /usr/obj .
.Pp
The defaults may be adjusted by modifying the configuration file.
The pruning and reblocking commands automatically maintain a cyclefile
for incremental operation.
If you interrupt (^C) the program the cyclefile will be updated,
but a sub-command
may continue to run in the background for a few seconds until the
.Nm HAMMER
ioctl detects the interrupt.
The
.Cm snapshots
PFS option can be set to use another location for the snapshots directory.
.Pp
Work on this command is still in progress.
Expected additions:
An ability to remove snapshots dynamically as the
file system becomes full.
.\" ==== config ====
.It Cm config Op Ar filesystem Op Ar configfile
.Nm ( HAMMER
VERSION 3+)
If zero or one arguments are specified this function dumps the current
configuration file to stdout.
Zero arguments specifies the PFS containing the current directory.
This configuration file is stored in filesystem meta-data.
If two arguments are specified this function installs a new config file.
.Pp
In
.Nm HAMMER
versions less than 3 the configuration file is by default stored in
.Pa <pfs>/snapshots/config ,
but in all later versions the configuration file is stored in filesystem
meta-data.
.\" ==== viconfig ====
.It Cm viconfig Op Ar filesystem
.Nm ( HAMMER
VERSION 3+)
Edit the configuration file and reinstall into filesystem meta-data when done.
Zero arguments specifies the PFS containing the current directory.
.\" ==== expand ====
.It Cm expand Ar filesystem Ar device
This command will format
.Ar device
and add all of its space to
.Ar filesystem .
.Pp
.Em NOTE!
All existing data contained on
.Ar device
will be destroyed by this operation!
If
.Ar device
contains a valid
.Nm HAMMER
filesystem, formatting will be denied.
You can overcome this sanity check
by using
.Xr dd 1
to erase the beginning sectors of the device.
Also remember that you have to specify
.Ar device ,
together with any other device that make the filesystem, colon-separated to
.Xr mount_hammer 8 .
.\" ==== snapshot ====
.It Cm snapshot Oo Ar filesystem Oc Ar snapshot-dir
.It Cm snapshot Ar filesystem Ar snapshot-dir Op Ar note
Takes a snapshot of the file system either explicitly given by
.Ar filesystem
or implicitly derived from the
.Ar snapshot-dir
argument and creates a symlink in the directory provided by
.Ar snapshot-dir
pointing to the snapshot.
If
.Ar snapshot-dir
is not a directory, it is assumed to be a format string passed to
.Xr strftime 3
with the current time as parameter.
If
.Ar snapshot-dir
refers to an existing directory, a default format string of
.Ql snap-%Y%d%m-%H%M
is assumed and used as name for the newly created symlink.
.Pp
Snapshot is a per PFS operation, so a
.Nm HAMMER
file system and each PFS in it have to be snapshot separately.
.Pp
Example, assuming that
.Pa /mysnapshots
is on file system
.Pa /
and that
.Pa /obj
and
.Pa /usr
are file systems on their own, the following invocations:
.Bd -literal -offset indent
hammer snapshot /mysnapshots

hammer snapshot /mysnapshots/%Y-%m-%d

hammer snapshot /obj /mysnapshots/obj-%Y-%m-%d

hammer snapshot /usr /my/snaps/usr "note"
.Ed
.Pp
Would create symlinks similar to:
.Bd -literal -offset indent
/mysnapshots/snap-20080627-1210 -> /@@0x10d2cd05b7270d16

/mysnapshots/2008-06-27 -> /@@0x10d2cd05b7270d16

/mysnapshots/obj-2008-06-27 -> /obj@@0x10d2cd05b7270d16

/my/snaps/usr/snap-20080627-1210 -> /usr@@0x10d2cd05b7270d16
.Ed
.Pp
When run on a
.Nm HAMMER
version 3+ filesystem the snapshot is also recorded in meta-data
along with the optional
.Ar note .
See the
.Cm snapls
directive.
.\" ==== snap* ====
.It Cm snap Ar path Op Ar note
.Nm ( HAMMER
VERSION 3+)
Create a snapshot for the PFS containing
.Ar path
and create a snapshot softlink.
If the path specified is a
directory a standard snapshot softlink will be created in the directory.
The snapshot softlink points to the base of the mounted PFS.
.It Cm snaplo Ar path Op Ar note
.Nm ( HAMMER
VERSION 3+)
Create a snapshot for the PFS containing
.Ar path
and create a snapshot softlink.
If the path specified is a
directory a standard snapshot softlink will be created in the directory.
The snapshot softlink points into the directory it is contained in.
.It Cm snapq Ar dir Op Ar note
.Nm ( HAMMER
VERSION 3+)
Create a snapshot for the PFS containing the specified directory but do
not create a softlink.
Instead output a path which can be used to access
the directory via the snapshot.
.Pp
An absolute or relative path may be specified.
The path will be used as-is as a prefix in the path output to stdout.
As with the other
snap and snapshot directives the snapshot transaction id will be registered
in the filesystem meta-data.
.It Cm snaprm Bro Ar path | transid Brc Ar ...
.Nm ( HAMMER
VERSION 3+)
Remove a snapshot given its softlink or transaction id.
If specifying a transaction id
the snapshot is removed from filesystem meta-data but you are responsible
for removing any related softlinks.
.It Cm snapls Op Ar path ...
.Nm ( HAMMER
VERSION 3+)
Dump the snapshot meta-data for PFSs containing each
.Ar path
listing all available snapshots and their notes.
If no arguments are specified snapshots for the PFS containing the
current directory are listed.
This is the definitive list of snapshots for the filesystem.
.\" ==== prune ====
.It Cm prune Ar softlink-dir
Prune the file system based on previously created snapshot softlinks.
Pruning is the act of deleting file system history.
The
.Cm prune
command will delete file system history such that
the file system state is retained for the given snapshots,
and all history after the latest snapshot.
By setting the per PFS parameter
.Cm prune-min ,
history is guaranteed to be saved at least this time interval.
All other history is deleted.
.Pp
The target directory is expected to contain softlinks pointing to
snapshots of the file systems you wish to retain.
The directory is scanned non-recursively and the mount points and
transaction ids stored in the softlinks are extracted and sorted.
The file system is then explicitly pruned according to what is found.
Cleaning out portions of the file system is as simple as removing a
snapshot softlink and then running the
.Cm prune
command.
.Pp
As a safety measure pruning only occurs if one or more softlinks are found
containing the
.Ql @@
snapshot id extension.
Currently the scanned softlink directory must contain softlinks pointing
to a single
.Nm HAMMER
mount.
The softlinks may specify absolute or relative paths.
Softlinks must use 20-character
.Ql @@0x%016llx
transaction ids, as might be returned from
.Nm Cm synctid Ar filesystem .
.Pp
Pruning is a per PFS operation, so a
.Nm HAMMER
file system and each PFS in it have to be pruned separately.
.Pp
Note that pruning a file system may not immediately free-up space,
though typically some space will be freed if a large number of records are
pruned out.
The file system must be reblocked to completely recover all available space.
.Pp
Example, lets say your that you didn't set
.Cm prune-min ,
and snapshot directory contains the following links:
.Bd -literal -offset indent
lrwxr-xr-x  1 root  wheel  29 May 31 17:57 snap1 ->
/usr/obj/@@0x10d2cd05b7270d16

lrwxr-xr-x  1 root  wheel  29 May 31 17:58 snap2 ->
/usr/obj/@@0x10d2cd13f3fde98f

lrwxr-xr-x  1 root  wheel  29 May 31 17:59 snap3 ->
/usr/obj/@@0x10d2cd222adee364
.Ed
.Pp
If you were to run the
.Cm prune
command on this directory, then the
.Nm HAMMER
.Pa /usr/obj
mount will be pruned to retain the above three snapshots.
In addition, history for modifications made to the file system older than
the oldest snapshot will be destroyed and history for potentially fine-grained
modifications made to the file system more recently than the most recent
snapshot will be retained.
.Pp
If you then delete the
.Pa snap2
softlink and rerun the
.Cm prune
command,
history for modifications pertaining to that snapshot would be destroyed.
.Pp
In
.Nm HAMMER
filesystem versions 3+ this command also scans the snapshots stored
in the filesystem meta-data and includes them in the prune.
.\" ==== prune-everything ====
.It Cm prune-everything Ar filesystem
This command will remove all historical records from the file system.
This directive is not normally used on a production system.
.Pp
This command does not remove snapshot softlinks but will delete all
snapshots recorded in filesystem meta-data (for filesystem version 3+).
The user is responsible for deleting any softlinks.
.\" ==== rebalance ====
.It Cm rebalance Ar filesystem Op Ar saturation_level
This command will rebalance the B-tree, nodes with small number of
elements will be combined and element counts will be smoothed out
between nodes.
.Pp
The saturation level is a percentage between 50 and 100.
The default is 75 percent.
.\" ==== reblock* ====
.It Cm reblock Ar filesystem Op Ar fill_percentage
.It Cm reblock-btree Ar filesystem Op Ar fill_percentage
.It Cm reblock-inodes Ar filesystem Op Ar fill_percentage
.It Cm reblock-dirs Ar filesystem Op Ar fill_percentage
.It Cm reblock-data Ar filesystem Op Ar fill_percentage
Attempt to defragment and free space for reuse by reblocking a live
.Nm HAMMER
file system.
Big-blocks cannot be reused by
.Nm HAMMER
until they are completely free.
This command also has the effect of reordering all elements, effectively
defragmenting the file system.
.Pp
The default fill percentage is 100% and will cause the file system to be
completely defragmented.
All specified element types will be reallocated and rewritten.
If you wish to quickly free up space instead try specifying
a smaller fill percentage, such as 90% or 80% (the
.Sq %
suffix is not needed).
.Pp
Since this command may rewrite the entire contents of the disk it is
best to do it incrementally from a
.Xr cron 8
job along with the
.Fl c Ar cyclefile
and
.Fl t Ar seconds
options to limit the run time.
The file system would thus be defragmented over long period of time.
.Pp
It is recommended that separate invocations be used for each data type.
B-tree nodes, inodes, and directories are typically the most important
elements needing defragmentation.
Data can be defragmented over a longer period of time.
.Pp
Reblocking is a per PFS operation, so a
.Nm HAMMER
file system and each PFS in it have to be reblocked separately.
.\" ==== pfs-status ====
.It Cm pfs-status Ar dirpath ...
Retrieve the mirroring configuration parameters for the specified
.Nm HAMMER
file systems or pseudo-filesystems (PFS's).
.\" ==== pfs-master ====
.It Cm pfs-master Ar dirpath Op Ar options
Create a pseudo-filesystem (PFS) inside a
.Nm HAMMER
file system.
Up to 65535 such file systems can be created.
Each PFS uses an independent inode numbering space making it suitable
for use as a replication source or target.
.Pp
The
.Cm pfs-master
directive creates a PFS that you can read, write, and use as a mirroring
source.
.Pp
It is recommended to use a
.Nm null
mount to access a PFS, for more information see
.Xr HAMMER 5 .
.\" ==== pfs-slave ====
.It Cm pfs-slave Ar dirpath Op Ar options
Create a pseudo-filesystem (PFS) inside a
.Nm HAMMER
file system.
Up to 65535 such file systems can be created.
Each PFS uses an independent inode numbering space making it suitable
for use as a replication source or target.
.Pp
The
.Cm pfs-slave
directive creates a PFS that you can use as a mirroring target.
You will not be able to access a slave PFS until you have completed the
first mirroring operation with it as the target (its root directory will
not exist until then).
.Pp
Access to the pfs-slave via the special softlink, as described in the
.Sx PFS NOTES
below, allows
.Nm HAMMER
to
dynamically modify the snapshot transaction id by returning a dynamic result
from
.Xr readlink 2
calls.
.Pp
A PFS can only be truly destroyed with the
.Cm pfs-destroy
directive.
Removing the softlink will not destroy the underlying PFS.
.Pp
It is recommended to use a
.Nm null
mount to access a PFS, for more information see
.Xr HAMMER 5 .
.\" ==== pfs-update ====
.It Cm pfs-update Ar dirpath Op Ar options
Update the configuration parameters for an existing
.Nm HAMMER
file system or pseudo-filesystem.
Options that may be specified:
.Bl -tag -width indent
.It Cm sync-beg-tid= Ns Ar 0x16llx
This is the automatic snapshot access starting transaction id for
mirroring slaves.
This parameter is normally updated automatically by the
.Cm mirror-write
directive.
.Pp
It is important to note that accessing a mirroring slave
with a transaction id greater than the last fully synchronized transaction
id can result in an unreliable snapshot since you will be accessing
data that is still undergoing synchronization.
.Pp
Manually modifying this field is dangerous and can result in a broken mirror.
.It Cm sync-end-tid= Ns Ar 0x16llx
This is the current synchronization point for mirroring slaves.
This parameter is normally updated automatically by the
.Cm mirror-write
directive.
.Pp
Manually modifying this field is dangerous and can result in a broken mirror.
.It Cm shared-uuid= Ns Ar uuid
Set the shared UUID for this file system.
All mirrors must have the same shared UUID.
For safety purposes the
.Cm mirror-write
directives will refuse to operate on a target with a different shared UUID.
.Pp
Changing the shared UUID on an existing, non-empty mirroring target,
including an empty but not completely pruned target,
can lead to corruption of the mirroring target.
.It Cm unique-uuid= Ns Ar uuid
Set the unique UUID for this file system.
This UUID should not be used anywhere else,
even on exact copies of the file system.
.It Cm label= Ns Ar string
Set a descriptive label for this file system.
.It Cm snapshots= Ns Ar string
Specify the snapshots directory which
.Nm
.Cm cleanup
will use to manage this PFS.
.Bl -tag -width indent
.It Nm HAMMER No version 2-
The snapshots directory does not need to be configured for
PFS masters and will default to
.Pa <pfs>/snapshots .
.Pp
PFS slaves are mirroring slaves so you cannot configure a snapshots
directory on the slave itself to be managed by the slave's machine.
In fact, the slave will likely have a
.Pa snapshots
sub-directory mirrored
from the master, but that directory contains the configuration the master
is using for its copy of the file system, not the configuration that we
want to use for our slave.
.Pp
It is recommended that
.Pa <fs>/var/slaves/<name>
be configured for a PFS slave, where
.Pa <fs>
is the base
.Nm HAMMER
file system, and
.Pa <name>
is an appropriate label.
.It Nm HAMMER No version 3+
The snapshots directory does not need to be configured for PFS masters or
slaves.
The snapshots directory defaults to
.Pa /var/hammer/<pfs>
.Pa ( /var/hammer/root
for root mount).
.El
.Pp
You can control snapshot retention on your slave independent of the master.
.It Cm snapshots-clear
Zero out the
.Cm snapshots
directory path for this PFS.
.It Cm prune-min= Ns Ar N Ns Cm d
.It Cm prune-min= Ns Oo Ar N Ns Cm d/ Oc Ns \
Ar hh Ns Op Cm \&: Ns Ar mm Ns Op Cm \&: Ns Ar ss
Set the minimum fine-grained data retention period.
.Nm HAMMER
always retains fine-grained history up to the most recent snapshot.
You can extend the retention period further by specifying a non-zero
pruning minimum.
Any snapshot softlinks within the retention period are ignored
for the purposes of pruning (the fine grained history is retained).
Number of days, hours, minutes and seconds are given as
.Ar N , hh , mm
and
.Ar ss .
.Pp
Because the transaction id in the snapshot softlink cannot be used
to calculate a timestamp,
.Nm HAMMER
uses the earlier of the
.Fa st_ctime
or
.Fa st_mtime
field of the softlink to
determine which snapshots fall within the retention period.
Users must be sure to retain one of these two fields when manipulating
the softlink.
.El
.\" ==== pfs-upgrade ====
.It Cm pfs-upgrade Ar dirpath
Upgrade a PFS from slave to master operation.
The PFS will be rolled back to the current end synchronization transaction id
(removing any partial synchronizations), and will then become writable.
.Pp
.Em WARNING!
.Nm HAMMER
currently supports only single masters and using
this command can easily result in file system corruption
if you don't know what you are doing.
.Pp
This directive will refuse to run if any programs have open descriptors
in the PFS, including programs chdir'd into the PFS.
.\" ==== pfs-downgrade ====
.It Cm pfs-downgrade Ar dirpath
Downgrade a master PFS from master to slave operation
The PFS becomes read-only and access will be locked to its
.Cm sync-end-tid .
.Pp
This directive will refuse to run if any programs have open descriptors
in the PFS, including programs chdir'd into the PFS.
.\" ==== pfs-destroy ====
.It Cm pfs-destroy Ar dirpath
This permanently destroys a PFS.
.Pp
This directive will refuse to run if any programs have open descriptors
in the PFS, including programs chdir'd into the PFS.
.\" ==== mirror-read ====
.It Cm mirror-read Ar filesystem Op Ar begin-tid
Generate a mirroring stream to stdout.
The stream ends when the transaction id space has been exhausted.
.\" ==== mirror-read-stream ====
.It Cm mirror-read-stream Ar filesystem Op Ar begin-tid
Generate a mirroring stream to stdout.
Upon completion the stream is paused until new data is synced to the
master, then resumed.
Operation continues until the pipe is broken.
.\" ==== mirror-write ====
.It Cm mirror-write Ar filesystem
Take a mirroring stream on stdin.
.Pp
This command will fail if the
.Cm shared-uuid
configuration field for the two file systems do not match.
.Pp
If the target PFS does not exist this command will ask you whether
you want to create a compatible PFS slave for the target or not.
.\" ==== mirror-dump ====
.It Cm mirror-dump
A
.Cm mirror-read
can be piped into a
.Cm mirror-dump
to dump an ASCII representation of the mirroring stream.
.\" ==== mirror-copy ====
.\".It Cm mirror-copy Ar [[user@]host:]filesystem [[user@]host:]filesystem
.It Cm mirror-copy \
Oo Oo Ar user Oc Ns Cm @ Ns Ar host Ns Cm \&: Oc Ns Ar filesystem \
Oo Oo Ar user Oc Ns Cm @ Ns Ar host Ns Cm \&: Oc Ns Ar filesystem
This is a shortcut which pipes a
.Cm mirror-read
command to a
.Cm mirror-write
command.
If a remote host specification is made the program forks a
.Xr ssh 1
and execs the
.Cm mirror-read
and/or
.Cm mirror-write
on the appropriate host.
The source may be a master or slave PFS, and the target must be a slave PFS.
.Pp
This command also established full duplex communication and turns on
the two-way protocol feature which automatically negotiates transaction id
ranges without having to use a cyclefile.
If the operation completes successfully the target PFS's
.Cm sync-end-tid
will be updated.
Note that you must re-chdir into the target PFS to see the updated information.
If you do not you will still be in the previous snapshot.
.Pp
If the target PFS does not exist this command will ask you whether
you want to create a compatible PFS slave for the target or not.
.\" ==== mirror-stream ====
.\".It Cm mirror-stream Ar [[user@]host:]filesystem [[user@]host:]filesystem
.It Cm mirror-stream \
Oo Oo Ar user Oc Ns Cm @ Ns Ar host Ns Cm \&: Oc Ns Ar filesystem \
Oo Oo Ar user Oc Ns Cm @ Ns Ar host Ns Cm \&: Oc Ns Ar filesystem
This command works similarly to
.Cm mirror-copy
but does not exit after the initial mirroring completes.
The mirroring operation will resume as changes continue to be made to the
master.
The command is commonly used with
.Fl i Ar delay
and
.Fl b Ar bandwidth
options to keep the mirroring target in sync with the source on a continuing
basis.
.Pp
If the pipe is broken the command will automatically retry after sleeping
for a short while.
The time slept will be 15 seconds plus the time given in the
.Fl i
option.
.Pp
This command also detects the initial-mirroring case and spends some
time scanning the B-Tree to find good break points, allowing the initial
bulk mirroring operation to be broken down into about 20 separate pieces.
This means that the user can kill and restart the operation and it will
not have to start from scratch once it has gotten past the first chunk.
The
.Fl B
option may be used to disable this feature and perform an initial bulk
transfer instead.
.\" ==== version ====
.It Cm version Ar filesystem
This command returns the
.Nm HAMMER
file system version for the specified
.Ar filesystem
as well as the range of versions supported in the kernel.
The
.Fl q
option may be used to remove the summary at the end.
.\" ==== version-upgrade ====
.It Cm version-upgrade Ar filesystem Ar version Op Cm force
This command upgrades the
.Nm HAMMER
.Ar filesystem
to the specified
.Ar version .
Once upgraded a file system may not be downgraded.
If you wish to upgrade a file system to a version greater or equal to the
work-in-progress version number you must specify the
.Cm force
directive.
Use of WIP versions should be relegated to testing and may require wiping
the filesystem as development progresses, even though the WIP version might
not change.
.Pp
.Em NOTE!
This command operates on the entire
.Nm HAMMER
file system and is not a per PFS operation.
All PFS's will be affected.
.Bl -tag -width indent
.It 1
.Dx 2.0
default version, first
.Nm HAMMER
release.
.It 2
.Dx 2.3
default version, new directory entry layout.
This version is using a new directory hash key.
.It 3
.Dx 2.5 .
New snapshot management, using filesystem meta-data for saving
configuration file and snapshots (transaction ids etc.).
Also default snapshots directory has changed.
.It 4
.Dx 2.5 .
New REDO, faster flush/sync.
WIP.
.El
.El
.\".Sh EXAMPLES
.Sh PSEUDO-FILESYSTEM (PFS) NOTES
The root of a PFS is not hooked into the primary
.Nm HAMMER
file system as a directory.
Instead,
.Nm HAMMER
creates a special softlink called
.Ql @@PFS%05d
(exactly 10 characters long) in the primary
.Nm HAMMER
file system.
.Nm HAMMER
then modifies the contents of the softlink as read by
.Xr readlink 2 ,
and thus what you see with an
.Nm ls
command or if you were to
.Nm cd
into the link.
If the PFS is a master the link reflects the current state of the PFS.
If the PFS is a slave the link reflects the last completed snapshot, and the
contents of the link will change when the next snapshot is completed, and
so forth.
.Pp
The
.Nm
utility employs numerous safeties to reduce user foot-shooting.
The
.Cm mirror-copy
directive requires that the target be configured as a slave and that the
.Cm shared-uuid
field of the mirroring source and target match.
.Sh UPGRADE INSTRUCTIONS HAMMER V1 TO V2
This upgrade changes the way directory entries are stored.
It is possible to upgrade a V1 filesystem to V2 in place, but
directories created prior to the upgrade will continue to use
the old layout.
.Pp
Note that the slave mirroring code in the target kernel had bugs in
V1 which can create an incompatible root directory on the slave.
Do not mix a
.Nm HAMMER
master created after the upgrade with a
.Nm HAMMER
slave created prior to the upgrade.
.Pp
Any directories created after upgrading will use a new layout.
.Sh UPGRADE INSTRUCTIONS HAMMER V2 TO V3
This upgrade adds meta-data elements to the B-Tree.
It is possible to upgrade a V2 filesystem to V3 in place.
After issuing the upgrade be sure to run a
.Nm
.Cm cleanup
to perform post-upgrade tasks.
.Pp
After making this upgrade running a
.Nm
.Cm cleanup
will move the
.Pa <pfs>/snapshots
directory for each PFS mount into
.Pa /var/hammer/<pfs> .
A
.Nm HAMMER
root mount will migrate
.Pa /snapshots
into
.Pa /var/hammer/root .
Migration occurs only once and only if you have not specified
a snapshots directory in the PFS configuration.
If you have specified a snapshots directory in the PFS configuration no
automatic migration will occur.
.Pp
For slaves, if you desire, you can migrate your snapshots
config to the new location manually and then clear the
snapshot directory configuration in the slave PFS.
The new snapshots hierarchy is designed to work with
both master and slave PFSs equally well.
.Pp
In addition, the old config file will be moved to meta-data,
editable via the new
.Nm
.Cm viconfig
directive.
The old config file will be deleted.
Migration occurs only once.
.Pp
The V3 filesystem has new
.Cm snap*
directives for creating snapshots.
All snapshot directives, including the original, will create
meta-data entries for the snapshots and the pruning code will
automatically incorporate these entries into its list and
expire them the same way it expires softlinks.
If you by accident blow away your snapshot softlinks you can use the
.Cm snapls
directive to get a definitive list from the meta-data and
regenerate them from that list.
.Pp
.Em WARNING!
If you are using
.Nm
to backup filesystems your scripts may be using the
.Cm synctid
directive to generate transaction ids.
This directive does not create a snapshot.
You will have to modify your scripts to use the
.Cm snapq
directive to generate the linkbuf for the softlink you create, or
use one of the other
.Cm snap*
directives.
The older
.Cm snapshot
directive will continue to work as expected and in V3 it will also
record the snapshot transaction id in meta-data.
You may also want to make use of the new
.Ar note
tag for the meta-data.
.Pp
.Em WARNING!
If you used to remove snapshot softlinks with
.Nm rm
you should probably start using the
.Cm snaprm
directive instead to also remove the related meta-data.
The pruning code scans the meta-data so just removing the
softlink is not sufficient.
.Sh EXIT STATUS
.Ex -std
.Sh FILES
.Bl -tag -width ".It Pa <fs>/var/slaves/<name>" -compact
.It Pa <pfs>/snapshots
default per PFS snapshots directory
.Nm ( HAMMER
VERSION 2-)
.It Pa /var/hammer/<pfs>
default per PFS snapshots directory (not root)
.Nm ( HAMMER
VERSION 3+)
.It Pa /var/hammer/root
default snapshots directory for root directory
.Nm ( HAMMER
VERSION 3+)
.It Pa <snapshots>/config
per PFS
.Nm
.Cm cleanup
configuration file
.Nm ( HAMMER
VERSION 2-)
.It Pa <fs>/var/slaves/<name>
recommended slave PFS snapshots directory
.Nm ( HAMMER
VERSION 2-)
.El
.Sh SEE ALSO
.Xr ssh 1 ,
.Xr undo 1 ,
.Xr HAMMER 5 ,
.Xr periodic.conf 5 ,
.Xr mount_hammer 8 ,
.Xr mount_null 8 ,
.Xr newfs_hammer 8
.Sh HISTORY
The
.Nm
utility first appeared in
.Dx 1.11 .
.Sh AUTHORS
.An Matthew Dillon Aq dillon@backplane.com
