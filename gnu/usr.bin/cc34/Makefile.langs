# $DragonFly: src/gnu/usr.bin/cc34/Makefile.langs,v 1.4 2004/12/21 15:13:56 joerg Exp $

.if !defined(NO_CXX)
gencheck_defs=	cp/cp-tree.def
.endif
.if !defined(NO_OBJC)
gencheck_defs+=	objc/objc-tree.def
.endif

optionsfiles=	${OTOPDIR}/cc_prep/c.opt
optionsfiles+=	${OTOPDIR}/cc_prep/common.opt
.if !defined(NO_FORTRAN)
optionsfiles+=	${GCCDIR}/gcc/f/lang.opt
.endif

options.c options.h: ${optionsfiles} ${STOPDIR}/Makefile.langs
	/bin/sh ${GCCDIR}/gcc/opts.sh 'mv' options.c options.h ${optionsfiles}

.if !defined(NO_CXX)
LANG_SPECS_FILES=	cp/lang-specs.h
.endif
.if !defined(NO_FORTRAN)
LANG_SPECS_FILES+=	f/lang-specs.h
.endif
.if !defined(NO_OBJC)
LANG_SPECS_FILES+=	objc/lang-specs.h
.endif

specs.h:
	rm -f ${.TARGET}
	touch ${.TARGET}
.for F in ${LANG_SPECS_FILES}
	echo "#include \"${F}\"" >> ${.TARGET}
.endfor

c-parse.y: c-parse.in
	echo '/*WARNING: This file is automatically generated!*/' > ${.TARGET}
	sed -e "/^@@ifobjc.*/,/^@@end_ifobjc.*/d" \
	    -e "/^@@ifc.*/d" -e "/^@@end_ifc.*/d" \
	    < ${GCCDIR}/gcc/c-parse.in >> ${.TARGET}

objc-parse.y: c-parse.in
	echo '/*WARNING: This file is automatically generated!*/' > ${.TARGET}
	sed -e "/^@@ifc.*/,/^@@end_ifc.*/d" \
	    -e "/^@@ifobjc.*/d" -e "/^@@end_ifobjc.*/d" \
	    < ${GCCDIR}/gcc/c-parse.in >> ${.TARGET}

CLEANFILES+=	specs.h c-parse.y

# this is directly from GCC's Makefile, beware evil
GTFILES = $(srcdir)/input.h $(srcdir)/coretypes.h $(srcdir)/cpplib.h \
  $(host_xm_file_list) $(tm_file_list) $(HASHTAB_H) $(SPLAY_TREE_H) \
  $(srcdir)/bitmap.h $(srcdir)/coverage.c $(srcdir)/function.h  $(srcdir)/rtl.h \
  $(srcdir)/optabs.h $(srcdir)/tree.h $(srcdir)/libfuncs.h $(srcdir)/hashtable.h \
  $(srcdir)/real.h $(srcdir)/varray.h $(srcdir)/insn-addr.h \
  $(srcdir)/cselib.h $(srcdir)/basic-block.h  $(srcdir)/cgraph.h \
  $(srcdir)/c-common.h $(srcdir)/c-tree.h \
  $(srcdir)/alias.c $(srcdir)/bitmap.c $(srcdir)/cselib.c $(srcdir)/cgraph.c \
  $(srcdir)/dbxout.c $(srcdir)/dwarf2out.c $(srcdir)/dwarf2asm.c \
  $(srcdir)/emit-rtl.c $(srcdir)/except.c $(srcdir)/explow.c $(srcdir)/expr.c \
  $(srcdir)/fold-const.c $(srcdir)/function.c \
  $(srcdir)/gcse.c $(srcdir)/integrate.c $(srcdir)/lists.c $(srcdir)/optabs.c \
  $(srcdir)/profile.c $(srcdir)/ra-build.c $(srcdir)/regclass.c \
  $(srcdir)/reg-stack.c $(srcdir)/cfglayout.c $(srcdir)/langhooks.c \
  $(srcdir)/sdbout.c $(srcdir)/stmt.c $(srcdir)/stor-layout.c \
  $(srcdir)/stringpool.c $(srcdir)/tree.c $(srcdir)/varasm.c \
  $(out_file)

.if !defined(NO_CXX)
GTFILES+=   $(srcdir)/cp/mangle.c $(srcdir)/cp/name-lookup.h $(srcdir)/cp/name-lookup.c \
   $(srcdir)/cp/cp-tree.h $(srcdir)/cp/decl.h $(srcdir)/cp/lex.h $(srcdir)/cp/call.c \
   $(srcdir)/cp/decl.c $(srcdir)/cp/decl2.c $(srcdir)/cp/pt.c $(srcdir)/cp/repo.c \
   $(srcdir)/cp/semantics.c $(srcdir)/cp/tree.c $(srcdir)/cp/parser.c \
   $(srcdir)/cp/method.c $(srcdir)/c-common.c $(srcdir)/c-common.h $(srcdir)/c-pragma.c
.endif

.if !defined(NO_FORTRAN)
GTFILES+=	$(srcdir)/f/com.c $(srcdir)/f/com.h $(srcdir)/f/ste.c $(srcdir)/f/where.h \
   $(srcdir)/f/where.c $(srcdir)/f/lex.c
.endif

.if !defined(NO_OBJC)
GTFILES+=	$(srcdir)/objc/objc-act.c $(srcdir)/objc/objc-act.h
.endif

# C
GTFILES+=	$(srcdir)/c-parse.in $(srcdir)/c-tree.h $(srcdir)/c-decl.c \
   $(srcdir)/c-objc-common.c $(srcdir)/c-common.c $(srcdir)/c-common.h \
   $(srcdir)/c-pragma.c $(srcdir)/c-lang.c $(srcdir)/c-parse.in \
   $(srcdir)/c-tree.h $(srcdir)/c-decl.c $(srcdir)/c-common.c \
   $(srcdir)/c-common.h $(srcdir)/c-pragma.c $(srcdir)/c-objc-common.c

# C
GTFILES_FILES_LANGS+=	c  c  c  c  c  c  c  c 
GTFILES_FILES_FILES+=	$(srcdir)/c-lang.c  $(srcdir)/c-parse.in  $(srcdir)/c-tree.h  $(srcdir)/c-decl.c \
   $(srcdir)/c-common.c  $(srcdir)/c-common.h  $(srcdir)/c-pragma.c  $(srcdir)/c-objc-common.c 
GTFILES_LANG_DIR_NAMES=

.if !defined(NO_CXX)
GTFILES_FILES_LANGS+=	cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp
GTFILES_FILES_FILES+=	$(srcdir)/cp/mangle.c  $(srcdir)/cp/name-lookup.h  $(srcdir)/cp/name-lookup.c \
   $(srcdir)/cp/cp-tree.h  $(srcdir)/cp/decl.h  $(srcdir)/cp/lex.h  $(srcdir)/cp/call.c \
   $(srcdir)/cp/decl.c  $(srcdir)/cp/decl2.c  $(srcdir)/cp/pt.c  $(srcdir)/cp/repo.c \
   $(srcdir)/cp/semantics.c  $(srcdir)/cp/tree.c  $(srcdir)/cp/parser.c  $(srcdir)/cp/method.c \
   $(srcdir)/c-common.c  $(srcdir)/c-common.h  $(srcdir)/c-pragma.c
GTFILES_LANG_DIR_NAMES+= cp
.endif

.if !defined(NO_FORTRAN)
GTFILES_FILES_LANGS+=	f  f  f  f  f  f 
GTFILES_FILES_FILES+=	$(srcdir)/f/com.c  $(srcdir)/f/com.h  $(srcdir)/f/ste.c  $(srcdir)/f/where.h \
   $(srcdir)/f/where.c  $(srcdir)/f/lex.c
GTFILES_LANG_DIR_NAMES+= f
.endif

.if !defined(NO_OBJC)
GTFILES_FILES_LANGS+=	objc  objc  objc  objc  objc  objc  objc  objc  objc
GTFILES_FILES_FILES+=	$(srcdir)/objc/objc-act.h $(srcdir)/c-parse.in  $(srcdir)/c-tree.h \
   $(srcdir)/c-decl.c  $(srcdir)/c-objc-common.c  $(srcdir)/c-common.c  $(srcdir)/c-common.h  $(srcdir)/c-pragma.c  $(srcdir)/objc/objc-act.c  
GTFILES_LANG_DIR_NAMES+= objc
.endif
