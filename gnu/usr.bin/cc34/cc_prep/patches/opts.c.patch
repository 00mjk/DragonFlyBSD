$DragonFly: src/gnu/usr.bin/cc34/cc_prep/patches/opts.c.patch,v 1.4 2005/03/22 23:58:32 joerg Exp $

===================================================================
RCS file: /home/joerg/wd/repository/dragonflybsd/src/contrib/gcc-3.4/gcc/opts.c,v
retrieving revision 1.1
diff -u -r1.1 opts.c
--- opts.c	20 Jun 2004 02:14:50 -0000	1.1
+++ opts.c	22 Mar 2005 23:54:25 -0000
@@ -125,6 +125,9 @@
 bool warn_unused_variable;
 bool warn_unused_value;
 
+/* Warn when not issuing stack smashing protection for some reason */
+bool warn_stack_protector;
+
 /* Hack for cooperation between set_Wunused and set_Wextra.  */
 static bool maybe_warn_unused_parameter;
 
@@ -142,6 +145,12 @@
    write_symbols is set to DBX_DEBUG, XCOFF_DEBUG, or DWARF_DEBUG.  */
 bool use_gnu_debug_info_extensions;
 
+/* The default visibility for all symbols (unless overridden) */
+enum symbol_visibility default_visibility = VISIBILITY_DEFAULT;
+
+/* Global visibility options.  */
+struct visibility_flags visibility_options;
+
 /* Columns of --help display.  */
 static unsigned int columns = 80;
 
@@ -560,7 +569,6 @@
       flag_schedule_insns_after_reload = 1;
 #endif
       flag_regmove = 1;
-      flag_strict_aliasing = 1;
       flag_delete_null_pointer_checks = 1;
       flag_reorder_blocks = 1;
       flag_reorder_functions = 1;
@@ -798,6 +806,10 @@
       warn_unused_variable = value;
       break;
 
+    case OPT_Wstack_protector:
+      warn_stack_protector = value;
+      break;
+
     case OPT_aux_info:
     case OPT_aux_info_:
       aux_info_file_name = arg;
@@ -1361,6 +1373,14 @@
       stack_limit_rtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (arg));
       break;
 
+    case OPT_fstack_protector:
+      flag_propolice_protection = value;
+      break;
+
+    case OPT_fstack_protector_all:
+      flag_stack_protection = value;
+      break;
+
     case OPT_fstrength_reduce:
       flag_strength_reduce = value;
       break;
@@ -1440,6 +1460,21 @@
       flag_verbose_asm = value;
       break;
 
+    case OPT_fvisibility_:
+      {
+        if(!strcmp(arg, "default"))
+          default_visibility=VISIBILITY_DEFAULT;
+        else if(!strcmp(arg, "internal"))
+          default_visibility=VISIBILITY_INTERNAL;
+        else if(!strcmp(arg, "hidden"))
+          default_visibility=VISIBILITY_HIDDEN;
+        else if(!strcmp(arg, "protected"))
+          default_visibility=VISIBILITY_PROTECTED;
+        else
+          error("unrecognised visibility value \"%s\"", arg);
+      }
+      break;
+
     case OPT_fweb:
       flag_web = value;
       break;
