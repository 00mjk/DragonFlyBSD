$DragonFly: src/gnu/usr.bin/cc34/cc_prep/patches/calls.c.patch,v 1.3 2004/12/21 13:10:48 joerg Exp $

===================================================================
RCS file: /home/joerg/wd/repository/dragonflybsd/src/contrib/gcc-3.4/gcc/calls.c,v
retrieving revision 1.2
diff -u -r1.2 calls.c
--- calls.c	20 Dec 2004 19:23:23 -0000	1.2
+++ calls.c	20 Dec 2004 20:48:09 -0000
@@ -2321,8 +2321,12 @@
 	  {
 	    /* For variable-sized objects, we must be called with a target
 	       specified.  If we were to allocate space on the stack here,
-	       we would have no way of knowing when to free it.  */
-	    rtx d = assign_temp (TREE_TYPE (exp), 1, 1, 1);
+	       we would have no way of knowing when to free it.
+
+	       This is the structure of a function return object and it isn't
+	       a character array for the stack protection, so it is
+	       marked using the assignment of the KEEP argument to 5.  */
+	    rtx d = assign_temp (TREE_TYPE (exp), 5, 1, 1);
 
 	    mark_temp_addr_taken (d);
 	    structure_value_addr = XEXP (d, 0);
