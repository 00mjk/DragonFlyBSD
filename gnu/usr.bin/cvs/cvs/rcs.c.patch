$DragonFly: src/gnu/usr.bin/cvs/cvs/Attic/rcs.c.patch,v 1.2 2006/09/13 19:34:24 corecode Exp $
diff -r 93f8116a881a contrib/cvs-1.12/src/rcs.c
--- a/contrib/cvs-1.12/src/rcs.c	Sat Sep 09 18:10:13 2006 +0200
+++ b/contrib/cvs-1.12/src/rcs.c	Wed Sep 13 18:46:37 2006 +0200
@@ -3512,6 +3512,9 @@ new_keywords (void)
     KEYWORD_INIT (new, KEYWORD_SOURCE, "Source");
     KEYWORD_INIT (new, KEYWORD_STATE, "State");
 
+    /* Per default, expand local keyword like Id */
+    new[KEYWORD_LOCALID].expandto = KEYWORD_ID;
+
     return new;
 }
 
@@ -7263,6 +7266,7 @@ RCS_deltas (RCSNode *rcs, FILE *fp, stru
     RCSVers *vers;
     RCSVers *prev_vers;
     RCSVers *trunk_vers;
+    RCSVers *top_vers;
     char *next;
     int ishead, isnext, isversion, onbranch;
     Node *node;
@@ -7270,6 +7274,7 @@ RCS_deltas (RCSNode *rcs, FILE *fp, stru
     struct linevector curlines;
     struct linevector trunklines;
     int foundhead;
+    int backwards;
 
     assert (version);
 
@@ -7285,9 +7290,16 @@ RCS_deltas (RCSNode *rcs, FILE *fp, stru
     vers = NULL;
     prev_vers = NULL;
     trunk_vers = NULL;
+    top_vers = NULL;
     next = NULL;
     onbranch = 0;
     foundhead = 0;
+    backwards = 0;
+
+    if (op == RCS_ANNOTATE_BACKWARDS) {
+	backwards = 1;
+	op = RCS_ANNOTATE;
+    }
 
     linevector_init (&curlines);
     linevector_init (&headlines);
@@ -7332,12 +7344,30 @@ RCS_deltas (RCSNode *rcs, FILE *fp, stru
 	    vers = node->data;
 	    next = vers->next;
 
+	    /* The top version is either HEAD or
+	       the last version on the branch.  */
+	    if (top_vers == NULL || onbranch && backwards)
+		top_vers = vers;
+
 	    /* Compare key and trunkversion now, because key points to
 	       storage controlled by rcsbuf_getkey.  */
 	    if (STREQ (branchversion, key))
 	        isversion = 1;
 	    else
 	        isversion = 0;
+
+	    if (backwards && STREQ (version, key)) {
+		if (onbranch) {
+		    unsigned int ln;
+
+		    for (ln = 0; ln < curlines.nlines; ++ln)
+			curlines.vector[ln]->vers = NULL;
+		} else {
+		    foundhead = 1;
+		    linevector_copy (&headlines, &curlines);
+		    break;
+		}
+	    }
 	}
 
 	while (1)
@@ -7365,17 +7395,36 @@ RCS_deltas (RCSNode *rcs, FILE *fp, stru
 		rcsbuf_valpolish (rcsbuf, value, 0, &vallen);
 		if (ishead)
 		{
-		    if (! linevector_add (&curlines, value, vallen, NULL, 0))
+		    if (! linevector_add (&curlines, value, vallen,
+					  backwards ? vers : NULL, 0))
 			error (1, 0, "invalid rcs file %s", rcs->print_path);
 
 		    ishead = 0;
 		}
 		else if (isnext)
 		{
+		    RCSVers *addv, *delv;
+
+		    if (backwards) {
+			if (onbranch) {
+			    addv = NULL;
+			    delv = vers;
+			} else {
+			    addv = prev_vers;
+			    delv = NULL;
+			}
+		    } else {
+			if (onbranch) {
+			    addv = vers;
+			    delv = NULL;
+			} else {
+			    addv = NULL;
+			    delv = prev_vers;
+			}
+		    }
 		    if (! apply_rcs_changes (&curlines, value, vallen,
 					     rcs->path,
-					     onbranch ? vers : NULL,
-					     onbranch ? NULL : prev_vers))
+					     addv, delv))
 			error (1, 0, "invalid change text in %s", rcs->print_path);
 		}
 		break;
@@ -7391,7 +7440,9 @@ RCS_deltas (RCSNode *rcs, FILE *fp, stru
 	        /* This is the version we want.  */
 		linevector_copy (&headlines, &curlines);
 		foundhead = 1;
-		if (onbranch)
+		/* If we are annotating backwards, we have to
+		   continue tracking when we're tracking a branch.  */
+		if (onbranch && !backwards)
 		{
 		    /* We have found this version by tracking up a
                        branch.  Restore back to the lines we saved
